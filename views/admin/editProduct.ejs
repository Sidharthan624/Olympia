<%- include('../layout/adminHeader.ejs') %>
    <form action="/admin/editProduct" method="post" enctype="multipart/form-data" id="product-form"
        onsubmit="return validateProductForm()">

        <section class="content-main">
            <div class="row">
                <div class="col-9">
                    <div class="content-header">
                        <h2 class="content-title">Edit Product</h2>
                        <div>
                            <a href='/admin/prdoucts'> <button
                                    class="btn btn-light rounded font-sm mr-5 text-body hover-up">cancel</button></a>
                            <input type="submit" class="btn btn-md rounded font-sm hover-up" value="Upload"
                                onclick="return validateProductForm()">

                        </div>
                    </div>
                </div>
                <input type="hidden" name="product_id" value="<%= product._id %>">
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="mb-4">
                                <label for="product_title" class="form-label">Product title</label>
                                <input type="text" placeholder="Type here"  value="<%= product.name %>" name="name" class="form-control"
                                    id="product_title">
                                <div class="error-message" style="color: red;" id="product_title-error"></div>
                               
                                    

                            </div>
                            <div class="row gx-3">
                                <div class="col-md-6  mb-3">
                                    <label for="product_sku" class="form-label">Brand</label>
                                    <input type="text" placeholder="Type here"  value="<%= product.brand %>" name="brand" class="form-control"
                                        id="product_brand">
                                    <div class="error-message" style="color: red;" id="product_brand-error"></div>

                                </div>
                                <div class="col-md-6  mb-3">
                                    <label for="inputPassword4" class="form-label">category</label>
                                    <select name="categoryData" class="form-control">
                                        <% categories?.forEach(category => { %>
                                            <option value="<%= category._id %>" <%= category._id.toString() === product.category.toString() ? 'selected' : '' %>>
                                                <%= category.name %>
                                            </option>
                                        <% }); %>
                                    </select>
                                    
                                    <div class="error-message" style="color: red;" id="product_brand-error"></div>

                                </div>



                            </div>


                        </div>
                    </div> <!-- card end// -->
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="row gx-3">
                                <div class="col-md-6">
                                    <label for="inputPrice" class="form-label">price</label>
                                    <input type="text" class="form-control"  value="<%= product.price %>" name="price" id="inputprice"
                                        placeholder="enter the price">
                                    <div class="error-message" style="color: red;" id="product_price-error"></div>
                                </div>



                                <div class="col-md-6  mb-3">

                                    <label class="form-label">Discount Price</label>

                                    <input type="number" name="discountPrice"  value="<%= product.discount_price %>" placeholder="Type here"
                                        class="form-control" id="product_discount">
                                    <div class="error-message" style="color: red;" id="product_discount-error"></div>



                                </div>

                                <div class="col-md-6  mb-3">
                                    <label class="form-label">Product Color</label>
                                    <input type="text" name="productColor"  value="<%= product.productColor %>" placeholder="Type here" class="form-control"
                                        id="product_color">
                                    <div class="error-message" style="color: red;" id="product_color-error"></div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="inputAddress2" class="form-label">gender</label>
                                    <select name="gender" class="form-control">
                                        <option value="" disabled selected>Select a Category
                                        </option>
                                        <% gender?.forEach(value=> { %>
                                            <option value="<%= value %>">
                                                <%= value %>
                                            </option>
                                            <% }); %>
                                    </select>
                                </div>

                            </div>
                            <div class="row gx-3">
                                <div class="col-md-12 card mb-4">
                                    <div class="card-body">

                                        <div class="size-container">
                                            


                                            
                                            <!-- Add Product Images Here -->
                                        </div>
                                        <label for="stockInput">Enter Stock Quantity:</label>
                                        <input type="number" id="stockInput" name="stockInput" min="0" value="<%= product.stock %>" placeholder="Enter quantity" required>

                                    </div>
                                </div>
                            </div>




                            <div>
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" name="description"   class="form-control"
                                    rows="4"><%= product.description %></textarea>
                                <div class="error-message" style="color: red;" id="description-error"></div>

                            </div>
                        </div>
                    </div> <!-- card end// -->

                </div>
                <div class="col-lg-3">

                    <div class="card mb-4">
                        <div class="card-body">

                            <div class="images-container">
                                <div class="image-preview-container d-flex flex-wrap justify-content-around">

                                    <% if (product.image && product.image.length > 0) { %>
                                        <% for (let i = 0; i < product.image.length; i++) { %>
                                            <div class="image-container border-1 mb-4">
                                                <input type="checkbox" id="delete-checkbox<%= i %>" name="deletecheckbox" value="<%= i%>">
                                                <label for="delete-checkbox<%= i %>">Delete</label>
                                                <img class="image-preview"  src="/assets/imgs/productIMG/<%= product.image[i] %>" alt="Default">
                                            </div>
                                        <% } %>
                                    <% } else{ %>
                                        <div class="image-container border-1 mb-4">
                                            <img class="image-preview" style="width: 100px; height: 100px; margin-bottom: 20px;" src="/uploadimage.svg" alt="Default">
                                        </div>
                                    <% } %>
                                </div>
                                <input class="form-control" name="image"  multiple="multiple" type="file" onchange="displayImages(this)">
                                <div class="error-message" style="color: red;" id="product_image-error"></div>
                            </div>                                
                        </div>
                        <script>
                            function displayImages(input) {
                                const previewContainer = document.querySelector('.image-preview-container');
                                previewContainer.innerHTML = ''; // Clear previous previews
                        
                                if (input.files && input.files.length > 0) {
                                    for (let i = 0; i < input.files.length; i++) {
                                        const reader = new FileReader();
                                        reader.onload = function (e) {
                                            const imagePreview = document.createElement('div');
                                            imagePreview.classList.add('image-container');
                                            const img = document.createElement('img');
                                            img.src = e.target.result;
                                            img.style.width = '100px';
                                            img.style.height = '100px';
                                         
                                            img.classList.add('image-preview');
                                            imagePreview.appendChild(img);
                                            previewContainer.appendChild(imagePreview);
                                        };
                                        reader.readAsDataURL(input.files[i]);
                                    }
                                } else {
                                    const defaultImagePreview = document.createElement('div');
                                    defaultImagePreview.classList.add('image-container');
                                    const defaultImg = document.createElement('img');
                                    defaultImg.src = '/uploadimage.svg';
                                    defaultImg.style.width = '100px';
                                    defaultImg.style.height = '100px';
                                  
                                    defaultImg.classList.add('image-preview');
                                    defaultImagePreview.appendChild(defaultImg);
                                    previewContainer.appendChild(defaultImagePreview);
                                }
                            }

                           
                        </script>
                    </div>
                </div>
            </div> 
          >
        </div>






<div id="invalid">
    <% if (typeof message !=='undefined' && message) { %>
        <p style="color: rgb(8, 96, 0);" id="message">
            <%= message %>
        </p>
        <% } %>
                      
</div>
</div> <!-- card end// -->
</div>

</div>
</section>
</form>



<script>
let sizeCount = 0;

function addSize() {
sizeCount++;
const container = document.querySelector('.size-container');
const sizeDiv = document.createElement('div');
sizeDiv.classList.add('row', 'my-1');

sizeDiv.innerHTML = `

<div class="col-5">
<label for="stock${sizeCount}">Stock:</label>
<input type="text" name="sizes[${sizeCount}][stock]" placeholder="Type here" class="form-control" id="stock${sizeCount}">
</div>
<div class="col-2 mt-4">
<button type="button" class="btn btn-danger " onclick="removeSize(this)">Remove</button>
</div>
`;

container.appendChild(sizeDiv);
}


function displayImage(imageNumber, input) {
const preview = document.getElementById(`image-preview${imageNumber}`);

if (input.files && input.files[0]) {
const reader = new FileReader();
reader.onload = function (e) {
    preview.src = e.target.result;
};
reader.readAsDataURL(input.files[0]);
} else {
preview.src = '';
}
}

function removeSize(button) {
const container = document.querySelector('.size-container');
const sizeDiv = button.parentElement.parentElement; // Get the parent div containing the size and stock fields.
container.removeChild(sizeDiv); // Remove the parent div from the container.
}

function viewImage(event, imageIndex) {
const imgView = document.getElementById(`imgView${imageIndex}`);
imgView.src = URL.createObjectURL(event.target.files[0]);
}
function validateProductForm() {
    // Reset previous error messages
    resetErrorMessages();

    // Flag to check if validation passed
    let isValid = true;

    // Validate product title
    const productTitle = document.getElementById('product_title').value.trim();
    if (!productTitle) {
        displayErrorMessage('product_title-error', 'Product title is required.');
        isValid = false;
    }

    // Validate brand
    const productBrand = document.getElementById('product_brand').value.trim();
    if (!productBrand) {
        displayErrorMessage('product_brand-error', 'Brand is required.');
        isValid = false;
    }

    // Validate category
    const selectedCategory = document.querySelector('select[name="categoryData"]').value;
    if (!selectedCategory) {
        displayErrorMessage('product_category-error', 'Category is required.');
        isValid = false;
    }

    // Validate price
    const productPrice = document.getElementById('inputprice').value.trim();
    if (!productPrice || isNaN(parseFloat(productPrice))) {
        displayErrorMessage('product_price-error', 'Enter a valid numeric price.');
        isValid = false;
    }

    // Validate discount price
    const productDiscount = document.getElementById('product_discount').value.trim();
    if (productDiscount !== '' && (isNaN(parseFloat(productDiscount)) || parseFloat(productDiscount) < 0)) {
        displayErrorMessage('product_discount-error', 'Enter a valid non-negative discount price.');
        isValid = false;
    }

  
   

    // Validate description
    const productDescription = document.querySelector('textarea[name="description"]').value.trim();
    if (!productDescription) {
        displayErrorMessage('description-error', 'Description is required.');
        isValid = false;
    }

    return isValid;
}

// Helper function to display error messages
function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.textContent = message;
    }
}

// Helper function to reset error messages
function resetErrorMessages() {
    const errorElements = document.querySelectorAll('.error-message');
    errorElements.forEach((errorElement) => {
        errorElement.textContent = '';
    });
}



    </script>


    <%- include('../layout/adminFooter.ejs') %>